package com.wision.mapper;

import com.wision.entity.*;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface ProdMapper {
    List<ProdListVo> prodList(@Param("params") ProdListForm params);
    List<ProdDetVo> prodDet(String params);
    boolean insertProd(@Param("params") ProdDetForm params);
    boolean deleteProd(Long params);
    boolean updateProd(@Param("params") ProdDetForm params);
    List<ProdViewVo> prodView(Long params);
    List<MenuListVo> menuList(Long prodId);
    String checkTblExists(String tblName);
    boolean dropTbl(String tblCode);
    boolean deleteTblById(Long tblId);
    boolean insertTblByName(Long prodId,String tblName);
    Long getTblIdByName(Long prodId,String tblName);
    boolean updateTblByCode(Long tblId,String tblCode);
    List<BasicTblList> basicTblList(Long prodId);
    List<RelatDetVo> getToolIdsByMenuId(Long menuId);
    List<RelatDetVo> extRelatList();
    boolean insertMenu(Long prodId);
    List<RelatDetVo> getRelatIdsByMenuId(Long menuId);
    boolean insertExtByMenu(Long menuId,Long toolId);
    boolean deleteType(Long typeId,String typeCode,String tblName);
    boolean deleteRelatExt(Long relatId);
    boolean deleteRelatMain(Long menuId);
    boolean deleteMenuMain(Long menuId);
    boolean updateMenu(Long menuId,String field,String value);
    Long existRelat(Long menuId,Long toolId);
    boolean insertRelat(Long menuId,Long toolId);
    List<RelatDetVo> getCleanExtIds(Long menuId, String toolIds);
    boolean cleanType(String tblName,String colCode,Long typeId);
    boolean cleanExt(Long menuId,String toolIds);
    boolean cleanRelat(Long menuId,String toolIds);
    List<MenuTreeVo> menuFather(Long prodId);
    List<children> menuChild(Long fatherId);
    List<FlowListVo> flowList(Long relatId);
    boolean insertFlow(Long relatId);
    boolean deleteFlow(Long extId);
    boolean updateFlow(Long extId,String field,String value);
    String getNewTypeIds();
    String selOtherTypeIds(Long oldTypeIds,Long stepId);
    boolean updateTypeIds(String newTypeIds,Long relatId);
    boolean cleanNullTypeIds();
    List<RelatDetVo> getTypeIds(Long relatId);
    List<RelatDetVo> relatDet(Long relatId);
    List<TblImpForm> tblList(Long prodId);
    List<TblImpForm> tblDet(Long tblId);
    String getMainTblByOtherRelatId(Long relatId);
    String getLayoutType(Long relatId);
    boolean updateRelatBasic(@Param("params") RelatForm params,String basicTbl);
    boolean updateRelatFlow(@Param("params") RelatForm params);
    String getToolType(Long relatId);
    String checkStepCol(String userTbl);
    boolean addStepCol(String userTbl);
    boolean iniStepCol(String userTbl);
    String chkExtCol(Long relatId);
    Long getmainRelatId(Long relatId);
    boolean addExtCol(Long relatId);
    String existTbl(String tblName);
    boolean createTbl(String tblName,String keysName);
    boolean cleanTbl(String tblName);
    boolean alterTbl(String tblName,String colName);
    boolean insertTbl(String tblName,String colName);
    boolean cleanHeader(Long relatId);
    String getHeader(String tblName,String cols);
    boolean insertHeader(Long relatId,String colCode,String colName);
    boolean cleanBasicBlank();
    boolean deleteHeader(String tblName);
    List<BasicCol> getColName(Long relatId);
    boolean updateCol(Long basicId,String field,String value);
    List<ChildTblCol> getTblSel(Long menuId, String res, String sel);
    String getBasicChildTbl(Long menuId);
    List<BasicCol> childTblHeadDet(Long menuId);
    ChildTblForm childTblContDet(String tblName,Long id);
    List<ChildTblForm> childTblCont(Long menuId,@Param("params1") ChildTblCont params1);
    List<MainTblVo> getMainTbl(Long menuId);
}
