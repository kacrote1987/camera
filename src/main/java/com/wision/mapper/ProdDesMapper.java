package com.wision.mapper;

import com.wision.entity.*;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface ProdDesMapper {
    boolean onLine(Long prodId);
    List<ProdDesignVo> prodDesign(@Param("params") ProdDesignForm params);
    List<ProdDetVo> prodDet(Long prodId);
    boolean insertProd(@Param("params") ProdDetForm params);
    boolean deleteProd(Long prodId);
    boolean updateProd(@Param("params") ProdDetForm params);
    List<TblListVo> tblList(Long prodId);
    List<MenuListVo> menuList(Long prodId);
    List<RelatDetVo> getToolIdsByMenuId(Long menuId);
    boolean insertMenu(Long prodId);
    boolean deleteRelatExt(Long menuId);
    boolean deleteRelatMain(Long menuId);
    boolean deleteMenuMain(Long menuId);
    Long checkRelat(Long menuId,Long toolId);
    boolean insertRelat(Long menuId,Long toolId);
    boolean cleanExt(Long menuId,String toolIds);
    boolean cleanRelat(Long menuId,String toolIds);
    boolean updateMenu(Long menuId,String field,String value);
    List<MenuTreeVo> menuFather(Long prodId);
    List<children> menuChild(Long fatherId);
    List<ToolSelVo> toolSel(Long menuId,@Param("params") ToolListForm params);
    Long getMainRelatId(Long menuId);
    List<PagePathVo> getDestinyPath(Long relatId);
    List<PagePathVo> getSourcePath(Long relatId,String destinyPath);
//    List<ProdViewVo> prodView(Long params);
//    String checkTblExists(String tblName);
//    boolean dropTbl(String tblCode);
//    boolean deleteTblById(Long tblId);
//    boolean insertTblByName(Long prodId,String tblName);
//    Long getTblIdByName(Long prodId,String tblName);
//    boolean updateTblByCode(Long tblId,String tblCode);
//    List<RelatDetVo> extRelatList();
//    String getNewTypeIds();
//    String selOtherTypeIds(Long oldTypeIds,Long stepId);
//    boolean updateTypeIds(String newTypeIds,Long relatId);
//    boolean cleanNullTypeIds();
//    List<TblImpForm> tblList(Long prodId);
//    List<TblImpForm> tblDet(Long tblId);
//    String getMainTblByOtherRelatId(Long relatId);
//    String getLayoutType(Long relatId);
//    boolean updateRelatBasic(@Param("params") RelatForm params,String basicTbl);
//    boolean updateRelatFlow(@Param("params") RelatForm params);
//    String getToolType(Long relatId);
//    String checkStepCol(String userTbl);
//    boolean addStepCol(String userTbl);
//    boolean iniStepCol(String userTbl);
//    String chkExtCol(Long relatId);
//    Long getmainRelatId(Long relatId);
//    boolean addExtCol(Long relatId);
//    String existTbl(String tblName);
//    boolean createTbl(String tblName,String keysName);
//    boolean cleanTbl(String tblName);
//    boolean alterTbl(String tblName,String colName);
//    boolean insertTbl(String tblName,String colName);
//    boolean cleanHeader(Long relatId);
//    String getHeader(String tblName,String cols);
//    boolean insertHeader(Long relatId,String colCode,String colName);
//    boolean cleanBasicBlank();
//    boolean deleteHeader(String tblName);
//    List<BasicCol> getColName(Long relatId);
//    boolean updateCol(Long basicId,String field,String value);
//    String getBasicChildTbl(Long menuId);
//    List<BasicCol> childTblHeadDet(Long menuId);
//    ChildTblForm childTblContDet(String tblName,Long id);
//    List<ChildTblForm> childTblCont(Long menuId,@Param("params1") ChildTblCont params1);
//    List<MainTblVo> getMainTbl(Long menuId);
}
